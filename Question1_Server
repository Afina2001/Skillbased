#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <time.h>

void error(const char *msg) { perror(msg); exit(0); }

int main(int argc, char *argv[])
{
    int socketFD, portNumber, charRead;
    struct sockaddr_in serverAddress;
    struct hostent* serverHostInfo;
    int randomNum;

    if (argc < 3) { fprintf(stderr,"USAGE: %s hostname port\n", argv[0]); exit(0); }

    // Set up the server address struct
    memset((char*)&serverAddress, '\0', sizeof(serverAddress));
    portNumber = atoi(argv[2]);
    serverAddress.sin_family = AF_INET; //network-capable socket
    serverAddress.sin_port = htons(portNumber);
    serverHostInfo = gethostbyname(argv[1]);
    if (serverHostInfo == NULL)
       {
          fprintf(stderr, "CLIENT: ERROR, no such host\n");
          exit(0);
       }

    memcpy((char*)&serverAddress.sin_addr.s_addr, (char*)serverHostInfo->h_addr, serverHostInfo->h_length); // Copy in the address

    // Set up the socket
    socketFD = socket(AF_INET, SOCK_STREAM, 0);
    if (socketFD < 0) error("CLIENT: ERROR opening socket");

    // Connect to server
    if (connect(socketFD, (struct sockaddr*)&serverAddress, sizeof(serverAddress)) < 0) // Connect socket to address
        error("CLIENT: ERROR connecting");
        
     // Receive random number from server
    charRead = recv(socketFD, &randomNum, sizeof(int), 0);
    if (charRead < 0) error("CLIENT: ERROR reading from socket");
    printf("Random Number from Server: %d\n", randomNum);

    close(socketFD);
    return 0;

